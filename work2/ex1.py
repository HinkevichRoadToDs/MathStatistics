import numpy as np
'''
Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8. 
Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.
'''

def comb(k, n):
    return np.math.factorial(n) / (np.math.factorial(k) * np.math.factorial(n-k))
p = 0.8
n = 100
m = 85
# испытания независимы и вероятность события в каждом испытании равна,
# поэтому СВ имеет биномиальное распределение, но испытаний много, поэтому воспользуюсь формулой Пуассона
lambda_var = n*p
P = lambda_var ** m / np.math.factorial(m) * np.exp(-lambda_var)
# если через формулу Бернулли
P1 = comb(85,100) * p ** m * (1 - p) ** (n - m)
print(f'Ответ к 1):{np.round(P1, 5)}')
